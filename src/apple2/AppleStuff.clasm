;*
;* CLASS FILE AppleStuff.class
;*
	.ORG	$1000	; DUMMY ADDRESS
	.BYTE	$CA,$FE,$BA,$BE	; MAGIC
	.BYTE	$00,$00	; MINOR 0
	.BYTE	$00,$31	; MAJOR 49
;*
;* CONSTANT POOL
;*
	.BYTE	$00,$47	; CONST POOL COUNT 71
;* CONST POOL INDEX 1
	.BYTE	$0A	; METHODREF
	.BYTE	$00,$17	; CLASS #23
	.BYTE	$00,$37	; NAME AND TYPE #55
;* CONST POOL INDEX 2
	.BYTE	$09	; FIELDREF
	.BYTE	$00,$16	; CLASS #22
	.BYTE	$00,$38	; NAME AND TYPE #56
;* CONST POOL INDEX 3
	.BYTE	$03	; INT
	.BYTE	$00,$00,$00,$0C	; 12
;* CONST POOL INDEX 4
	.BYTE	$0A	; METHODREF
	.BYTE	$00,$39	; CLASS #57
	.BYTE	$00,$3A	; NAME AND TYPE #58
;* CONST POOL INDEX 5
	.BYTE	$03	; INT
	.BYTE	$00,$00,$C0,$51	; 49233
;* CONST POOL INDEX 6
	.BYTE	$0A	; METHODREF
	.BYTE	$00,$39	; CLASS #57
	.BYTE	$00,$3B	; NAME AND TYPE #59
;* CONST POOL INDEX 7
	.BYTE	$03	; INT
	.BYTE	$00,$00,$C0,$54	; 49236
;* CONST POOL INDEX 8
	.BYTE	$0A	; METHODREF
	.BYTE	$00,$39	; CLASS #57
	.BYTE	$00,$3C	; NAME AND TYPE #60
;* CONST POOL INDEX 9
	.BYTE	$03	; INT
	.BYTE	$00,$00,$FC,$58	; 64600
;* CONST POOL INDEX 10
	.BYTE	$03	; INT
	.BYTE	$00,$00,$C0,$56	; 49238
;* CONST POOL INDEX 11
	.BYTE	$03	; INT
	.BYTE	$00,$00,$C0,$53	; 49235
;* CONST POOL INDEX 12
	.BYTE	$03	; INT
	.BYTE	$00,$00,$C0,$50	; 49232
;* CONST POOL INDEX 13
	.BYTE	$03	; INT
	.BYTE	$00,$00,$F8,$36	; 63542
;* CONST POOL INDEX 14
	.BYTE	$03	; INT
	.BYTE	$00,$00,$C0,$52	; 49234
;* CONST POOL INDEX 15
	.BYTE	$03	; INT
	.BYTE	$00,$00,$F8,$32	; 63538
;* CONST POOL INDEX 16
	.BYTE	$03	; INT
	.BYTE	$00,$01,$40,$20	; 81952
;* CONST POOL INDEX 17
	.BYTE	$03	; INT
	.BYTE	$01,$00,$00,$00	; 16777216
;* CONST POOL INDEX 18
	.BYTE	$03	; INT
	.BYTE	$00,$00,$FF,$FF	; 65535
;* CONST POOL INDEX 19
	.BYTE	$03	; INT
	.BYTE	$00,$00,$C0,$57	; 49239
;* CONST POOL INDEX 20
	.BYTE	$03	; INT
	.BYTE	$00,$00,$C0,$55	; 49237
;* CONST POOL INDEX 21
	.BYTE	$0A	; METHODREF
	.BYTE	$00,$16	; CLASS #22
	.BYTE	$00,$3D	; NAME AND TYPE #61
;* CONST POOL INDEX 22
	.BYTE	07	; CLASS
	.BYTE	$00,$3E	; #62
;* CONST POOL INDEX 23
	.BYTE	07	; CLASS
	.BYTE	$00,$3F	; #63
;* CONST POOL INDEX 24
	.BYTE	$01	; UTF8
	.BYTE	$00,$08	; STRLEN
	.BYTE	"hrHandle"
;* CONST POOL INDEX 25
	.BYTE	$01	; UTF8
	.BYTE	$00,$01	; STRLEN
	.BYTE	"I"
;* CONST POOL INDEX 26
	.BYTE	$01	; UTF8
	.BYTE	$00,$06	; STRLEN
	.BYTE	"<init>"
;* CONST POOL INDEX 27
	.BYTE	$01	; UTF8
	.BYTE	$00,$03	; STRLEN
	.BYTE	"()V"
;* CONST POOL INDEX 28
	.BYTE	$01	; UTF8
	.BYTE	$00,$04	; STRLEN
	.BYTE	"Code"
;* CONST POOL INDEX 29
	.BYTE	$01	; UTF8
	.BYTE	$00,$04	; STRLEN
	.BYTE	"text"
;* CONST POOL INDEX 30
	.BYTE	$01	; UTF8
	.BYTE	$00,$0A	; STRLEN
	.BYTE	"keyPressed"
;* CONST POOL INDEX 31
	.BYTE	$01	; UTF8
	.BYTE	$00,$03	; STRLEN
	.BYTE	"()Z"
;* CONST POOL INDEX 32
	.BYTE	$01	; UTF8
	.BYTE	$00,$06	; STRLEN
	.BYTE	"getKey"
;* CONST POOL INDEX 33
	.BYTE	$01	; UTF8
	.BYTE	$00,$03	; STRLEN
	.BYTE	"()C"
;* CONST POOL INDEX 34
	.BYTE	$01	; UTF8
	.BYTE	$00,$08	; STRLEN
	.BYTE	"loResMix"
;* CONST POOL INDEX 35
	.BYTE	$01	; UTF8
	.BYTE	$00,$05	; STRLEN
	.BYTE	"loRes"
;* CONST POOL INDEX 36
	.BYTE	$01	; UTF8
	.BYTE	$00,$07	; STRLEN
	.BYTE	"lrColor"
;* CONST POOL INDEX 37
	.BYTE	$01	; UTF8
	.BYTE	$00,$04	; STRLEN
	.BYTE	"(I)V"
;* CONST POOL INDEX 38
	.BYTE	$01	; UTF8
	.BYTE	$00,$07	; STRLEN
	.BYTE	"lrHLine"
;* CONST POOL INDEX 39
	.BYTE	$01	; UTF8
	.BYTE	$00,$07	; STRLEN
	.BYTE	"(IIII)V"
;* CONST POOL INDEX 40
	.BYTE	$01	; UTF8
	.BYTE	$00,$06	; STRLEN
	.BYTE	"(III)V"
;* CONST POOL INDEX 41
	.BYTE	$01	; UTF8
	.BYTE	$00,$07	; STRLEN
	.BYTE	"lrVLine"
;* CONST POOL INDEX 42
	.BYTE	$01	; UTF8
	.BYTE	$00,$06	; STRLEN
	.BYTE	"lrPlot"
;* CONST POOL INDEX 43
	.BYTE	$01	; UTF8
	.BYTE	$00,$05	; STRLEN
	.BYTE	"(II)V"
;* CONST POOL INDEX 44
	.BYTE	$01	; UTF8
	.BYTE	$00,$05	; STRLEN
	.BYTE	"hiRes"
;* CONST POOL INDEX 45
	.BYTE	$01	; UTF8
	.BYTE	$00,$07	; STRLEN
	.BYTE	"hrColor"
;* CONST POOL INDEX 46
	.BYTE	$01	; UTF8
	.BYTE	$00,$06	; STRLEN
	.BYTE	"hrPlot"
;* CONST POOL INDEX 47
	.BYTE	$01	; UTF8
	.BYTE	$00,$06	; STRLEN
	.BYTE	"hrLine"
;* CONST POOL INDEX 48
	.BYTE	$01	; UTF8
	.BYTE	$00,$08	; STRLEN
	.BYTE	"hrLineTo"
;* CONST POOL INDEX 49
	.BYTE	$01	; UTF8
	.BYTE	$00,$06	; STRLEN
	.BYTE	"paddle"
;* CONST POOL INDEX 50
	.BYTE	$01	; UTF8
	.BYTE	$00,$04	; STRLEN
	.BYTE	"(I)I"
;* CONST POOL INDEX 51
	.BYTE	$01	; UTF8
	.BYTE	$00,$06	; STRLEN
	.BYTE	"button"
;* CONST POOL INDEX 52
	.BYTE	$01	; UTF8
	.BYTE	$00,$04	; STRLEN
	.BYTE	"(I)Z"
;* CONST POOL INDEX 53
	.BYTE	$01	; UTF8
	.BYTE	$00,$04	; STRLEN
	.BYTE	"tone"
;* CONST POOL INDEX 54
	.BYTE	$01	; UTF8
	.BYTE	$00,$08	; STRLEN
	.BYTE	"<clinit>"
;* CONST POOL INDEX 55
	.BYTE	$0C	; NAME AND TYPE
	.BYTE	$00,$1A	; NAME #26
	.BYTE	$00,$1B	; DESC #27
;* CONST POOL INDEX 56
	.BYTE	$0C	; NAME AND TYPE
	.BYTE	$00,$18	; NAME #24
	.BYTE	$00,$19	; DESC #25
;* CONST POOL INDEX 57
	.BYTE	07	; CLASS
	.BYTE	$00,$40	; #64
;* CONST POOL INDEX 58
	.BYTE	$0C	; NAME AND TYPE
	.BYTE	$00,$41	; NAME #65
	.BYTE	$00,$42	; DESC #66
;* CONST POOL INDEX 59
	.BYTE	$0C	; NAME AND TYPE
	.BYTE	$00,$43	; NAME #67
	.BYTE	$00,$32	; DESC #50
;* CONST POOL INDEX 60
	.BYTE	$0C	; NAME AND TYPE
	.BYTE	$00,$44	; NAME #68
	.BYTE	$00,$45	; DESC #69
;* CONST POOL INDEX 61
	.BYTE	$0C	; NAME AND TYPE
	.BYTE	$00,$35	; NAME #53
	.BYTE	$00,$28	; DESC #40
;* CONST POOL INDEX 62
	.BYTE	$01	; UTF8
	.BYTE	$00,$11	; STRLEN
	.BYTE	"apple2/AppleStuff"
;* CONST POOL INDEX 63
	.BYTE	$01	; UTF8
	.BYTE	$00,$10	; STRLEN
	.BYTE	"java/lang/Object"
;* CONST POOL INDEX 64
	.BYTE	$01	; UTF8
	.BYTE	$00,$0B	; STRLEN
	.BYTE	"apple2/vm02"
;* CONST POOL INDEX 65
	.BYTE	$01	; UTF8
	.BYTE	$00,$04	; STRLEN
	.BYTE	"call"
;* CONST POOL INDEX 66
	.BYTE	$01	; UTF8
	.BYTE	$00,$05	; STRLEN
	.BYTE	"(II)I"
;* CONST POOL INDEX 67
	.BYTE	$01	; UTF8
	.BYTE	$00,$08	; STRLEN
	.BYTE	"peekByte"
;* CONST POOL INDEX 68
	.BYTE	$01	; UTF8
	.BYTE	$00,$08	; STRLEN
	.BYTE	"pokeByte"
;* CONST POOL INDEX 69
	.BYTE	$01	; UTF8
	.BYTE	$00,$05	; STRLEN
	.BYTE	"(IB)V"
;* CONST POOL INDEX 70
	.BYTE	$01	; UTF8
	.BYTE	$00,$04	; STRLEN
	.BYTE	"6502"
;*
;* ACCESS FLAGS
;*
	.BYTE	$00,$21	; 0x0021
;*
;* THIS CLASS
;*
	.BYTE	$00,$16	; #22
;*
;* SUPER CLASS
;*
	.BYTE	$00,$17	; #23
;*
;* INTERFACES
;*
	.BYTE	$00,$00	; IFACE COUNT 0
;*
;* FIELDS
;*
	.BYTE	$00,$01	; FIELD COUNT 1
;******* FIELD INDEX 0 ********
	.BYTE	$00,$0A	; ACCESS FLAGS 0x000A
	.BYTE	$00,$18	; NAME #24
	.BYTE	$00,$19	; DESC #25
	.BYTE	$00,$00	; ATTRIB COUNT 0
;*
;* METHODS
;*
	.BYTE	$00,$17	; METHOD COUNT 23
;******* METHOD INDEX 0 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$1A	; NAME #26
	.BYTE	$00,$1B	; DESC #27
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$1C	; NAME #28
	.BYTE	$00,$00,>(M0A0END-M0A0BGN),<(M0A0END-M0A0BGN)
M0A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$01	; MAX LOCALS 1
	.BYTE	$00,$00,>(M0C0END-M0C0BGN),<(M0C0END-M0C0BGN)
M0C0BGN:
	.BYTE	$2A	; 00000: aload_0
	.BYTE	$B7,$00,$01	; 00001: invokespecial #1
	.BYTE	$B1	; 00004: return
M0C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M0A0END:
;******* METHOD INDEX 1 ********
	.BYTE	$00,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$1D	; NAME #29
	.BYTE	$00,$1B	; DESC #27
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$1C	; NAME #28
	.BYTE	$00,$00,>(M1A0END-M1A0BGN),<(M1A0END-M1A0BGN)
M1A0BGN:
;* CODE:
	.BYTE	$00,$02	; MAX STACK 2
	.BYTE	$00,$00	; MAX LOCALS 0
	.BYTE	$00,$00,>(M1C0END-M1C0BGN),<(M1C0END-M1C0BGN)
M1C0BGN:
	.BYTE	$B2,$00,$02	; 00000: getstatic #2
	.BYTE	$99,$00,$10	; 00003: ifeq +16 (000019)
	.BYTE	$B2,$00,$02	; 00006: getstatic #2
	.BYTE	$12,$03	; 00009: ldc #3
	.BYTE	$B8,$00,$04	; 00011: invokestatic #4
	.BYTE	$57	; 00014: pop
	.BYTE	$03	; 00015: iconst_0
	.BYTE	$B3,$00,$02	; 00016: putstatic #2
	.BYTE	$12,$05	; 00019: ldc #5
	.BYTE	$B8,$00,$06	; 00021: invokestatic #6
	.BYTE	$57	; 00024: pop
	.BYTE	$12,$07	; 00025: ldc #7
	.BYTE	$B8,$00,$06	; 00027: invokestatic #6
	.BYTE	$57	; 00030: pop
	.BYTE	$10,$22	; 00031: bipush 34
	.BYTE	$03	; 00033: iconst_0
	.BYTE	$B8,$00,$08	; 00034: invokestatic #8
	.BYTE	$03	; 00037: iconst_0
	.BYTE	$12,$09	; 00038: ldc #9
	.BYTE	$B8,$00,$04	; 00040: invokestatic #4
	.BYTE	$57	; 00043: pop
	.BYTE	$B1	; 00044: return
M1C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M1A0END:
;******* METHOD INDEX 2 ********
	.BYTE	$00,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$1E	; NAME #30
	.BYTE	$00,$1F	; DESC #31
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$1C	; NAME #28
	.BYTE	$00,$00,>(M2A0END-M2A0BGN),<(M2A0END-M2A0BGN)
M2A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$00	; MAX LOCALS 0
	.BYTE	$00,$00,>(M2C0END-M2C0BGN),<(M2C0END-M2C0BGN)
M2C0BGN:
	.BYTE	$11,$02,$80	; 00000: sipush 640
	.BYTE	$B8,$00,$06	; 00003: invokestatic #6
	.BYTE	$9E,$00,$07	; 00006: ifle +7 (000013)
	.BYTE	$04	; 00009: iconst_1
	.BYTE	$A7,$00,$04	; 00010: goto +4 (000014)
	.BYTE	$03	; 00013: iconst_0
	.BYTE	$AC	; 00014: ireturn
M2C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M2A0END:
;******* METHOD INDEX 3 ********
	.BYTE	$00,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$20	; NAME #32
	.BYTE	$00,$21	; DESC #33
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$1C	; NAME #28
	.BYTE	$00,$00,>(M3A0END-M3A0BGN),<(M3A0END-M3A0BGN)
M3A0BGN:
;* CODE:
	.BYTE	$00,$02	; MAX STACK 2
	.BYTE	$00,$01	; MAX LOCALS 1
	.BYTE	$00,$00,>(M3C0END-M3C0BGN),<(M3C0END-M3C0BGN)
M3C0BGN:
	.BYTE	$03	; 00000: iconst_0
	.BYTE	$10,$76	; 00001: bipush $76
	.BYTE	$B8,$00,$04	; 00003: invokestatic #4
	.BYTE	$3B	; 00006: istore_0
	.BYTE	$1A	; 00007: iload_0
	.BYTE	$10,$7F	; 00008: bipush 127
	.BYTE	$7E	; 00010: iand
	.BYTE	$92	; 00011: i2c
	.BYTE	$AC	; 00012: ireturn
M3C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M3A0END:
;******* METHOD INDEX 4 ********
	.BYTE	$00,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$22	; NAME #34
	.BYTE	$00,$1B	; DESC #27
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$1C	; NAME #28
	.BYTE	$00,$00,>(M4A0END-M4A0BGN),<(M4A0END-M4A0BGN)
M4A0BGN:
;* CODE:
	.BYTE	$00,$02	; MAX STACK 2
	.BYTE	$00,$00	; MAX LOCALS 0
	.BYTE	$00,$00,>(M4C0END-M4C0BGN),<(M4C0END-M4C0BGN)
M4C0BGN:
	.BYTE	$12,$0A	; 00000: ldc #10
	.BYTE	$B8,$00,$06	; 00002: invokestatic #6
	.BYTE	$57	; 00005: pop
	.BYTE	$12,$0B	; 00006: ldc #11
	.BYTE	$B8,$00,$06	; 00008: invokestatic #6
	.BYTE	$57	; 00011: pop
	.BYTE	$12,$0C	; 00012: ldc #12
	.BYTE	$B8,$00,$06	; 00014: invokestatic #6
	.BYTE	$57	; 00017: pop
	.BYTE	$03	; 00018: iconst_0
	.BYTE	$12,$0D	; 00019: ldc #13
	.BYTE	$B8,$00,$04	; 00021: invokestatic #4
	.BYTE	$57	; 00024: pop
	.BYTE	$10,$22	; 00025: bipush 34
	.BYTE	$10,$14	; 00027: bipush 20
	.BYTE	$B8,$00,$08	; 00029: invokestatic #8
	.BYTE	$03	; 00032: iconst_0
	.BYTE	$12,$09	; 00033: ldc #9
	.BYTE	$B8,$00,$04	; 00035: invokestatic #4
	.BYTE	$57	; 00038: pop
	.BYTE	$B1	; 00039: return
M4C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M4A0END:
;******* METHOD INDEX 5 ********
	.BYTE	$00,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$23	; NAME #35
	.BYTE	$00,$1B	; DESC #27
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$1C	; NAME #28
	.BYTE	$00,$00,>(M5A0END-M5A0BGN),<(M5A0END-M5A0BGN)
M5A0BGN:
;* CODE:
	.BYTE	$00,$02	; MAX STACK 2
	.BYTE	$00,$00	; MAX LOCALS 0
	.BYTE	$00,$00,>(M5C0END-M5C0BGN),<(M5C0END-M5C0BGN)
M5C0BGN:
	.BYTE	$12,$0A	; 00000: ldc #10
	.BYTE	$B8,$00,$06	; 00002: invokestatic #6
	.BYTE	$57	; 00005: pop
	.BYTE	$12,$0E	; 00006: ldc #14
	.BYTE	$B8,$00,$06	; 00008: invokestatic #6
	.BYTE	$57	; 00011: pop
	.BYTE	$12,$0C	; 00012: ldc #12
	.BYTE	$B8,$00,$06	; 00014: invokestatic #6
	.BYTE	$57	; 00017: pop
	.BYTE	$03	; 00018: iconst_0
	.BYTE	$12,$0F	; 00019: ldc #15
	.BYTE	$B8,$00,$04	; 00021: invokestatic #4
	.BYTE	$57	; 00024: pop
	.BYTE	$B1	; 00025: return
M5C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M5A0END:
;******* METHOD INDEX 6 - lrColor ********
	.BYTE	$01,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$24	; NAME #36
	.BYTE	$00,$25	; DESC #37
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,70	; NAME #70
	.BYTE	$00,$00,>(M6A0END-M6A0BGN),<(M6A0END-M6A0BGN)
M6A0BGN:
;* CODE:
	.BYTE	$00,$00	; MAX STACK 0
	.BYTE	$00,$01	; MAX LOCALS 1
	.BYTE	$00,$00,>(M6C0END-M6C0BGN),<(M6C0END-M6C0BGN)
M6C0BGN:
	.INCLUDE	"apple2/lrColor.s"
M6C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M6A0END:
;******* METHOD INDEX 7 - lrHLine(x1, x2, y, c) ********
	.BYTE	$01,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$26	; NAME #38
	.BYTE	$00,$27	; DESC #39
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,70	; NAME #70
	.BYTE	$00,$00,>(M7A0END-M7A0BGN),<(M7A0END-M7A0BGN)
M7A0BGN:
;* CODE:
	.BYTE	$00,$00	; MAX STACK 0
	.BYTE	$00,$04	; MAX LOCALS 4
	.BYTE	$00,$00,>(M7C0END-M7C0BGN),<(M7C0END-M7C0BGN)
M7C0BGN:
	.INCLUDE	"apple2/lrClrHLine.s"
M7C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M7A0END:
;******* METHOD INDEX 8 - lrHLine(x1, x2, y) ********
	.BYTE	$01,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$26	; NAME #38
	.BYTE	$00,$28	; DESC #40
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,70	; NAME #70
	.BYTE	$00,$00,>(M8A0END-M8A0BGN),<(M8A0END-M8A0BGN)
M8A0BGN:
;* CODE:
	.BYTE	$00,$00	; MAX STACK 0
	.BYTE	$00,$03	; MAX LOCALS 3
	.BYTE	$00,$00,>(M8C0END-M8C0BGN),<(M8C0END-M8C0BGN)
M8C0BGN:
	.INCLUDE	"apple2/lrHLine.s"
M8C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M8A0END:
;******* METHOD INDEX 9 - lrVLine(x, y1, y2, c) ********
	.BYTE	$01,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$29	; NAME #41
	.BYTE	$00,$27	; DESC #39
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,70	; NAME #70
	.BYTE	$00,$00,>(M9A0END-M9A0BGN),<(M9A0END-M9A0BGN)
M9A0BGN:
;* CODE:
	.BYTE	$00,$00	; MAX STACK 0
	.BYTE	$00,$04	; MAX LOCALS 4
	.BYTE	$00,$00,>(M9C0END-M9C0BGN),<(M9C0END-M9C0BGN)
M9C0BGN:
	.INCLUDE	"apple2/lrClrVLine.s"
M9C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M9A0END:
;******* METHOD INDEX 10 - lrVLine(x, y1, y2) ********
	.BYTE	$01,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$29	; NAME #41
	.BYTE	$00,$28	; DESC #40
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,70	; NAME #70
	.BYTE	$00,$00,>(M10A0END-M10A0BGN),<(M10A0END-M10A0BGN)
M10A0BGN:
;* CODE:
	.BYTE	$00,$00	; MAX STACK 0
	.BYTE	$00,$03	; MAX LOCALS 3
	.BYTE	$00,$00,>(M10C0END-M10C0BGN),<(M10C0END-M10C0BGN)
M10C0BGN:
	.INCLUDE	"apple2/lrVLine.s"
M10C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M10A0END:
;******* METHOD INDEX 11 - lrPlot(x, y, c) ********
	.BYTE	$01,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$2A	; NAME #42
	.BYTE	$00,$28	; DESC #40
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,70	; NAME #70
	.BYTE	$00,$00,>(M11A0END-M11A0BGN),<(M11A0END-M11A0BGN)
M11A0BGN:
;* CODE:
	.BYTE	$00,$00	; MAX STACK 0
	.BYTE	$00,$03	; MAX LOCALS 3
	.BYTE	$00,$00,>(M11C0END-M11C0BGN),<(M11C0END-M11C0BGN)
M11C0BGN:
	.INCLUDE	"apple2/lrClrPlot.s"
M11C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M11A0END:
;******* METHOD INDEX 12 - lrPlot(x,y) ********
	.BYTE	$01,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$2A	; NAME #42
	.BYTE	$00,$2B	; DESC #43
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,70	; NAME #70
	.BYTE	$00,$00,>(M12A0END-M12A0BGN),<(M12A0END-M12A0BGN)
M12A0BGN:
;* CODE:
	.BYTE	$00,$00	; MAX STACK 0
	.BYTE	$00,$02	; MAX LOCALS 2
	.BYTE	$00,$00,>(M12C0END-M12C0BGN),<(M12C0END-M12C0BGN)
M12C0BGN:
	.INCLUDE	"apple2/lrPlot.s"
M12C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M12A0END:
;******* METHOD INDEX 13 - hiRes ********
	.BYTE	$00,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$2C	; NAME #44
	.BYTE	$00,$1F	; DESC #31
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$1C	; NAME #28
	.BYTE	$00,$00,>(M13A0END-M13A0BGN),<(M13A0END-M13A0BGN)
M13A0BGN:
;* CODE:
	.BYTE	$00,$02	; MAX STACK 2
	.BYTE	$00,$01	; MAX LOCALS 1
	.BYTE	$00,$00,>(M13C0END-M13C0BGN),<(M13C0END-M13C0BGN)
M13C0BGN:
	.BYTE	$12,$10	; 00000: ldc #16
	.BYTE	$10,$0A	; 00002: bipush 10
	.BYTE	$B8,$00,$04	; 00004: invokestatic #4
	.BYTE	$3B	; 00007: istore_0
	.BYTE	$1A	; 00008: iload_0
	.BYTE	$12,$11	; 00009: ldc #17
	.BYTE	$7E	; 00011: iand
	.BYTE	$9A,$00,$36	; 00012: ifne +54 (000066)
	.BYTE	$1A	; 00015: iload_0
	.BYTE	$12,$12	; 00016: ldc #18
	.BYTE	$7E	; 00018: iand
	.BYTE	$B3,$00,$02	; 00019: putstatic #2
	.BYTE	$12,$0E	; 00022: ldc #14
	.BYTE	$B8,$00,$06	; 00024: invokestatic #6
	.BYTE	$57	; 00027: pop
	.BYTE	$12,$13	; 00028: ldc #19
	.BYTE	$B8,$00,$06	; 00030: invokestatic #6
	.BYTE	$57	; 00033: pop
	.BYTE	$12,$14	; 00034: ldc #20
	.BYTE	$B8,$00,$06	; 00036: invokestatic #6
	.BYTE	$57	; 00039: pop
	.BYTE	$12,$0C	; 00040: ldc #12
	.BYTE	$B8,$00,$06	; 00042: invokestatic #6
	.BYTE	$57	; 00045: pop
	.BYTE	$11,$40,$00	; 00046: sipush 16384
	.BYTE	$10,$40	; 00049: bipush 64
	.BYTE	$B8,$00,$04	; 00051: invokestatic #4
	.BYTE	$57	; 00054: pop
	.BYTE	$11,$20,$00	; 00055: sipush 8192
	.BYTE	$10,$44	; 00058: bipush 68
	.BYTE	$B8,$00,$04	; 00060: invokestatic #4
	.BYTE	$57	; 00063: pop
	.BYTE	$04	; 00064: iconst_1
	.BYTE	$AC	; 00065: ireturn
	.BYTE	$10,$64	; 00066: bipush 100
	.BYTE	$10,$64	; 00068: bipush 100
	.BYTE	$B8,$00,$04	; 00070: invokestatic #4
	.BYTE	$3B	; 00073: istore_0
	.BYTE	$1A	; 00074: iload_0
	.BYTE	$12,$11	; 00075: ldc #17
	.BYTE	$7E	; 00077: iand
	.BYTE	$99,$FF,$B2	; 00078: ifeq -78 (000000)
	.BYTE	$03	; 00081: iconst_0
	.BYTE	$AC	; 00082: ireturn
M13C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M13A0END:
;******* METHOD INDEX 14 - hrColor ********
	.BYTE	$01,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$2D	; NAME #45
	.BYTE	$00,$25	; DESC #37
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,70	; NAME #70
	.BYTE	$00,$00,>(M14A0END-M14A0BGN),<(M14A0END-M14A0BGN)
M14A0BGN:
;* CODE:
	.BYTE	$00,$00	; MAX STACK 0
	.BYTE	$00,$01	; MAX LOCALS 1
	.BYTE	$00,$00,>(M14C0END-M14C0BGN),<(M14C0END-M14C0BGN)
M14C0BGN:
	.INCLUDE	"apple2/hrColor.s"
M14C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M14A0END:
;******* METHOD INDEX 15 - hrPlot  ********
	.BYTE	$01,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$2E	; NAME #46
	.BYTE	$00,$2B	; DESC #43
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,70	; NAME #70
	.BYTE	$00,$00,>(M15A0END-M15A0BGN),<(M15A0END-M15A0BGN)
M15A0BGN:
;* CODE:
	.BYTE	$00,$00	; MAX STACK 0
	.BYTE	$00,$02	; MAX LOCALS 2
	.BYTE	$00,$00,>(M15C0END-M15C0BGN),<(M15C0END-M15C0BGN)
M15C0BGN:
	.INCLUDE	"apple2/hrPlot.s"
M15C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M15A0END:
;******* METHOD INDEX 16 - hrLine  ********
	.BYTE	$01,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$2F	; NAME #47
	.BYTE	$00,$27	; DESC #39
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,70	; NAME #70
	.BYTE	$00,$00,>(M16A0END-M16A0BGN),<(M16A0END-M16A0BGN)
M16A0BGN:
;* CODE:
	.BYTE	$00,$00	; MAX STACK 0
	.BYTE	$00,$04	; MAX LOCALS 4
	.BYTE	$00,$00,>(M16C0END-M16C0BGN),<(M16C0END-M16C0BGN)
M16C0BGN:
	.INCLUDE	"apple2/hrLine.s"
M16C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M16A0END:
;******* METHOD INDEX 17 - hrLineTo ********
	.BYTE	$01,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$30	; NAME #48
	.BYTE	$00,$2B	; DESC #43
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,70	; NAME #70
	.BYTE	$00,$00,>(M17A0END-M17A0BGN),<(M17A0END-M17A0BGN)
M17A0BGN:
;* CODE:
	.BYTE	$00,$00	; MAX STACK 0
	.BYTE	$00,$02	; MAX LOCALS 2
	.BYTE	$00,$00,>(M17C0END-M17C0BGN),<(M17C0END-M17C0BGN)
M17C0BGN:
	.INCLUDE	"apple2/hrLineTo.s"
M17C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M17A0END:
;******* METHOD INDEX 18 - paddle ********
	.BYTE	$01,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$31	; NAME #49
	.BYTE	$00,$32	; DESC #50
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,70	; NAME #70
	.BYTE	$00,$00,>(M18A0END-M18A0BGN),<(M18A0END-M18A0BGN)
M18A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$01	; MAX LOCALS 1
	.BYTE	$00,$00,>(M18C0END-M18C0BGN),<(M18C0END-M18C0BGN)
M18C0BGN:
	.INCLUDE	"apple2/paddle.s"
M18C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M18A0END:
;******* METHOD INDEX 19 24 - button ********
	.BYTE	$01,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$33	; NAME #51
	.BYTE	$00,$34	; DESC #52
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,70	; NAME #70
	.BYTE	$00,$00,>(M19A0END-M19A0BGN),<(M19A0END-M19A0BGN)
M19A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$01	; MAX LOCALS 1
	.BYTE	$00,$00,>(M19C0END-M19C0BGN),<(M19C0END-M19C0BGN)
M19C0BGN:
	.INCLUDE	"apple2/button.s"
M19C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M19A0END:
;******* METHOD INDEX 20 - tone(II) ********
	.BYTE	$00,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$35	; NAME #53
	.BYTE	$00,$2B	; DESC #43
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$1C	; NAME #28
	.BYTE	$00,$00,>(M20A0END-M20A0BGN),<(M20A0END-M20A0BGN)
M20A0BGN:
;* CODE:
	.BYTE	$00,$03	; MAX STACK 3
	.BYTE	$00,$02	; MAX LOCALS 2
	.BYTE	$00,$00,>(M20C0END-M20C0BGN),<(M20C0END-M20C0BGN)
M20C0BGN:
	.BYTE	$1A	; 00000: iload_0
	.BYTE	$1A	; 00001: iload_0
	.BYTE	$04	; 00002: iconst_1
	.BYTE	$7A	; 00003: ishr
	.BYTE	$1B	; 00004: iload_1
	.BYTE	$B8,$00,$15	; 00005: invokestatic #21
	.BYTE	$B1	; 00008: return
M20C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M20A0END:
;******* METHOD INDEX 21- tone(III) ********
	.BYTE	$01,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$35	; NAME #53
	.BYTE	$00,$28	; DESC #40
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,70	; NAME #70
	.BYTE	$00,$00,>(M21A0END-M21A0BGN),<(M21A0END-M21A0BGN)
M21A0BGN:
;* CODE:
	.BYTE	$00,$00	; MAX STACK 0
	.BYTE	$00,$03	; MAX LOCALS 3
	.BYTE	$00,$00,>(M21C0END-M21C0BGN),<(M21C0END-M21C0BGN)
M21C0BGN:
	.INCLUDE	"apple2/tone.s"
M21C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M21A0END:
;******* METHOD INDEX 22 ********
	.BYTE	$00,$08	; ACCESS FLAGS 0x0008
	.BYTE	$00,$36	; NAME #54
	.BYTE	$00,$1B	; DESC #27
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$1C	; NAME #28
	.BYTE	$00,$00,>(M22A0END-M22A0BGN),<(M22A0END-M22A0BGN)
M22A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$00	; MAX LOCALS 0
	.BYTE	$00,$00,>(M22C0END-M22C0BGN),<(M22C0END-M22C0BGN)
M22C0BGN:
	.BYTE	$03	; 00000: iconst_0
	.BYTE	$B3,$00,$02	; 00001: putstatic #2
	.BYTE	$B1	; 00004: return
M22C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M22A0END:
;*
;* GLOBAL ATTRIBUTES
;*
	.BYTE	$00,$00	; ATTRIB COUNT 0
