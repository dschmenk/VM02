;*
;* CLASS FILE _String.class
;*
	.ORG	$1000	; DUMMY ADDRESS
	.BYTE	$CA,$FE,$BA,$BE	; MAGIC
	.BYTE	$00,$00	; MINOR 0
	.BYTE	$00,$31	; MAJOR 49
;*
;* CONSTANT POOL
;*
	.BYTE	$00,$46	; CONST POOL COUNT 70
;* CONST POOL INDEX 1
	.BYTE	$0A	; METHODREF
	.BYTE	$00,$03	; CLASS #3
	.BYTE	$00,$41	; NAME AND TYPE #65
;* CONST POOL INDEX 2
	.BYTE	07	; CLASS
	.BYTE	$00,68	; #68
;* CONST POOL INDEX 3
	.BYTE	07	; CLASS
	.BYTE	$00,67	; #67
;* CONST POOL INDEX 4
	.BYTE	$01	; UTF8
	.BYTE	$00,$01	; STRLEN
	.BYTE	"_"
;* CONST POOL INDEX 5
	.BYTE	$01	; UTF8
	.BYTE	$00,$01	; STRLEN
	.BYTE	"I"
;* CONST POOL INDEX 6
	.BYTE	$01	; UTF8
	.BYTE	$00,$06	; STRLEN
	.BYTE	"<init>"
;* CONST POOL INDEX 7
	.BYTE	$01	; UTF8
	.BYTE	$00,$03	; STRLEN
	.BYTE	"()V"
;* CONST POOL INDEX 8
	.BYTE	$01	; UTF8
	.BYTE	$00,$04	; STRLEN
	.BYTE	"Code"
;* CONST POOL INDEX 9
	.BYTE	$01	; UTF8
	.BYTE	$00,$06	; STRLEN
	.BYTE	"([BI)V"
;* CONST POOL INDEX 10
	.BYTE	$01	; UTF8
	.BYTE	$00,$07	; STRLEN
	.BYTE	"([BII)V"
;* CONST POOL INDEX 11
	.BYTE	$01	; UTF8
	.BYTE	$00,$05	; STRLEN
	.BYTE	"([C)V"
;* CONST POOL INDEX 12
	.BYTE	$01	; UTF8
	.BYTE	$00,$07	; STRLEN
	.BYTE	"([CII)V"
;* CONST POOL INDEX 13
	.BYTE	$01	; UTF8
	.BYTE	$00,$15	; STRLEN
	.BYTE	"(Ljava/lang/String;)V"
;* CONST POOL INDEX 14
	.BYTE	$01	; UTF8
	.BYTE	$00,$1B	; STRLEN
	.BYTE	"(Ljava/lang/StringBuffer;)V"
;* CONST POOL INDEX 15
	.BYTE	$01	; UTF8
	.BYTE	$00,$06	; STRLEN
	.BYTE	"charAt"
;* CONST POOL INDEX 16
	.BYTE	$01	; UTF8
	.BYTE	$00,$04	; STRLEN
	.BYTE	"(I)C"
;* CONST POOL INDEX 17
	.BYTE	$01	; UTF8
	.BYTE	$00,$09	; STRLEN
	.BYTE	"compareTo"
;* CONST POOL INDEX 18
	.BYTE	$01	; UTF8
	.BYTE	$00,$15	; STRLEN
	.BYTE	"(Ljava/lang/String;)I"
;* CONST POOL INDEX 19
	.BYTE	$01	; UTF8
	.BYTE	$00,$06	; STRLEN
	.BYTE	"concat"
;* CONST POOL INDEX 20
	.BYTE	$01	; UTF8
	.BYTE	$00,$26	; STRLEN
	.BYTE	"(Ljava/lang/String;)Ljava/lang/String;"
;* CONST POOL INDEX 21
	.BYTE	$01	; UTF8
	.BYTE	$00,$0B	; STRLEN
	.BYTE	"copyValueOf"
;* CONST POOL INDEX 22
	.BYTE	$01	; UTF8
	.BYTE	$00,$16	; STRLEN
	.BYTE	"([C)Ljava/lang/String;"
;* CONST POOL INDEX 23
	.BYTE	$01	; UTF8
	.BYTE	$00,$18	; STRLEN
	.BYTE	"([CII)Ljava/lang/String;"
;* CONST POOL INDEX 24
	.BYTE	$01	; UTF8
	.BYTE	$00,$08	; STRLEN
	.BYTE	"endsWith"
;* CONST POOL INDEX 25
	.BYTE	$01	; UTF8
	.BYTE	$00,$15	; STRLEN
	.BYTE	"(Ljava/lang/String;)Z"
;* CONST POOL INDEX 26
	.BYTE	$01	; UTF8
	.BYTE	$00,$06	; STRLEN
	.BYTE	"equals"
;* CONST POOL INDEX 27
	.BYTE	$01	; UTF8
	.BYTE	$00,$15	; STRLEN
	.BYTE	"(Ljava/lang/Object;)Z"
;* CONST POOL INDEX 28
	.BYTE	$01	; UTF8
	.BYTE	$00,$10	; STRLEN
	.BYTE	"equalsIgnoreCase"
;* CONST POOL INDEX 29
	.BYTE	$01	; UTF8
	.BYTE	$00,$08	; STRLEN
	.BYTE	"getBytes"
;* CONST POOL INDEX 30
	.BYTE	$01	; UTF8
	.BYTE	$00,$08	; STRLEN
	.BYTE	"(II[BI)V"
;* CONST POOL INDEX 31
	.BYTE	$01	; UTF8
	.BYTE	$00,$08	; STRLEN
	.BYTE	"getChars"
;* CONST POOL INDEX 32
	.BYTE	$01	; UTF8
	.BYTE	$00,$08	; STRLEN
	.BYTE	"(II[CI)V"
;* CONST POOL INDEX 33
	.BYTE	$01	; UTF8
	.BYTE	$00,$08	; STRLEN
	.BYTE	"hashCode"
;* CONST POOL INDEX 34
	.BYTE	$01	; UTF8
	.BYTE	$00,$03	; STRLEN
	.BYTE	"()I"
;* CONST POOL INDEX 35
	.BYTE	$01	; UTF8
	.BYTE	$00,$07	; STRLEN
	.BYTE	"indexOf"
;* CONST POOL INDEX 36
	.BYTE	$01	; UTF8
	.BYTE	$00,$04	; STRLEN
	.BYTE	"(I)I"
;* CONST POOL INDEX 37
	.BYTE	$01	; UTF8
	.BYTE	$00,$05	; STRLEN
	.BYTE	"(II)I"
;* CONST POOL INDEX 38
	.BYTE	$01	; UTF8
	.BYTE	$00,$16	; STRLEN
	.BYTE	"(Ljava/lang/String;I)I"
;* CONST POOL INDEX 39
	.BYTE	$01	; UTF8
	.BYTE	$00,$06	; STRLEN
	.BYTE	"intern"
;* CONST POOL INDEX 40
	.BYTE	$01	; UTF8
	.BYTE	$00,$14	; STRLEN
	.BYTE	"()Ljava/lang/String;"
;* CONST POOL INDEX 41
	.BYTE	$01	; UTF8
	.BYTE	$00,$0B	; STRLEN
	.BYTE	"lastIndexOf"
;* CONST POOL INDEX 42
	.BYTE	$01	; UTF8
	.BYTE	$00,$06	; STRLEN
	.BYTE	"length"
;* CONST POOL INDEX 43
	.BYTE	$01	; UTF8
	.BYTE	$00,$0D	; STRLEN
	.BYTE	"regionMathces"
;* CONST POOL INDEX 44
	.BYTE	$01	; UTF8
	.BYTE	$00,$19	; STRLEN
	.BYTE	"(ZILjava/lang/String;II)Z"
;* CONST POOL INDEX 45
	.BYTE	$01	; UTF8
	.BYTE	$00,$18	; STRLEN
	.BYTE	"(ILjava/lang/String;II)Z"
;* CONST POOL INDEX 46
	.BYTE	$01	; UTF8
	.BYTE	$00,$07	; STRLEN
	.BYTE	"replace"
;* CONST POOL INDEX 47
	.BYTE	$01	; UTF8
	.BYTE	$00,$16	; STRLEN
	.BYTE	"(CC)Ljava/lang/String;"
;* CONST POOL INDEX 48
	.BYTE	$01	; UTF8
	.BYTE	$00,$0A	; STRLEN
	.BYTE	"startsWith"
;* CONST POOL INDEX 49
	.BYTE	$01	; UTF8
	.BYTE	$00,$09	; STRLEN
	.BYTE	"startWith"
;* CONST POOL INDEX 50
	.BYTE	$01	; UTF8
	.BYTE	$00,$16	; STRLEN
	.BYTE	"(Ljava/lang/String;I)Z"
;* CONST POOL INDEX 51
	.BYTE	$01	; UTF8
	.BYTE	$00,$09	; STRLEN
	.BYTE	"subString"
;* CONST POOL INDEX 52
	.BYTE	$01	; UTF8
	.BYTE	$00,$15	; STRLEN
	.BYTE	"(I)Ljava/lang/String;"
;* CONST POOL INDEX 53
	.BYTE	$01	; UTF8
	.BYTE	$00,$16	; STRLEN
	.BYTE	"(II)Ljava/lang/String;"
;* CONST POOL INDEX 54
	.BYTE	$01	; UTF8
	.BYTE	$00,$0B	; STRLEN
	.BYTE	"toCharArray"
;* CONST POOL INDEX 55
	.BYTE	$01	; UTF8
	.BYTE	$00,$04	; STRLEN
	.BYTE	"()[C"
;* CONST POOL INDEX 56
	.BYTE	$01	; UTF8
	.BYTE	$00,$0B	; STRLEN
	.BYTE	"toLowerCase"
;* CONST POOL INDEX 57
	.BYTE	$01	; UTF8
	.BYTE	$00,$08	; STRLEN
	.BYTE	"toString"
;* CONST POOL INDEX 58
	.BYTE	$01	; UTF8
	.BYTE	$00,$0B	; STRLEN
	.BYTE	"toUpperCase"
;* CONST POOL INDEX 59
	.BYTE	$01	; UTF8
	.BYTE	$00,$04	; STRLEN
	.BYTE	"trim"
;* CONST POOL INDEX 60
	.BYTE	$01	; UTF8
	.BYTE	$00,$07	; STRLEN
	.BYTE	"valueOf"
;* CONST POOL INDEX 61
	.BYTE	$01	; UTF8
	.BYTE	$00,$15	; STRLEN
	.BYTE	"(Z)Ljava/lang/String;"
;* CONST POOL INDEX 62
	.BYTE	$01	; UTF8
	.BYTE	$00,$15	; STRLEN
	.BYTE	"(C)Ljava/lang/String;"
;* CONST POOL INDEX 63
	.BYTE	$01	; UTF8
	.BYTE	$00,$15	; STRLEN
	.BYTE	"(F)Ljava/lang/String;"
;* CONST POOL INDEX 64
	.BYTE	$01	; UTF8
	.BYTE	$00,$26	; STRLEN
	.BYTE	"(Ljava/lang/Object;)Ljava/lang/String;"
;* CONST POOL INDEX 65
	.BYTE	$0C	; NAME AND TYPE
	.BYTE	$00,$06	; NAME #6
	.BYTE	$00,$07	; DESC #7
;* CONST POOL INDEX 66
	.BYTE	$01	; UTF8
	.BYTE	$00,$06	; STRLEN
	.BYTE	"String"
;* CONST POOL INDEX 67
	.BYTE	$01	; UTF8
	.BYTE	$00,$10	; STRLEN
	.BYTE	"java/lang/Object"
;* CONST POOL INDEX 68
	.BYTE	$01	; UTF8
	.BYTE	$00,$10	; STRLEN
	.BYTE	"java/lang/String"
;* CONST POOL INDEX 69
	.BYTE	$01	; UTF8
	.BYTE	$00,$04	; STRLEN
	.BYTE	"6502"
;*
;* ACCESS FLAGS
;*
	.BYTE	$00,$31	; 0x0031
;*
;* THIS CLASS
;*
	.BYTE	$00,$02	; #2
;*
;* SUPER CLASS
;*
	.BYTE	$00,$03	; #3
;*
;* INTERFACES
;*
	.BYTE	$00,$00	; IFACE COUNT 0
;*
;* FIELDS
;*
.IF	0
	.BYTE	$00,$01	; FIELD COUNT 1
;******* FIELD INDEX 0 ********
	.BYTE	$00,$02	; ACCESS FLAGS 0x0002
	.BYTE	$00,$04	; NAME #4
	.BYTE	$00,$05	; DESC #5
	.BYTE	$00,$00	; ATTRIB COUNT 0
.ELSE
	.BYTE	$00,$00	; FIELDS COUNT 0
.ENDIF
;*
;* METHODS
;*
;	.BYTE	$00,$2F	; METHOD COUNT 47
	.BYTE	$00,5	; METHOD COUNT 5
;******* METHOD INDEX 0 - String() ********
	.BYTE	$01,$01	; ACCESS FLAGS 0x0101
	.BYTE	$00,$06	; NAME #6
	.BYTE	$00,$07	; DESC #7
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,69	; NAME #69
	.BYTE	$00,$00,>(M0A0END-M0A0BGN),<(M0A0END-M0A0BGN)
M0A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$01	; MAX LOCALS 1
	.BYTE	$00,$00,>(M0C0END-M0C0BGN),<(M0C0END-M0C0BGN)
M0C0BGN:
	RTS
M0C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M0A0END:
;******* METHOD INDEX 1 - String(byte ascii[], int hibyte) ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$06	; NAME #6
	.BYTE	$00,$09	; DESC #9
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M1A0END-M1A0BGN),<(M1A0END-M1A0BGN)
M1A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$03	; MAX LOCALS 3
	.BYTE	$00,$00,>(M1C0END-M1C0BGN),<(M1C0END-M1C0BGN)
M1C0BGN:
	.BYTE	$2A	; 00000: aload_0
	.BYTE	$B7,$00,$01	; 00001: invokespecial #1
	.BYTE	$B1	; 00004: return
M1C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M1A0END:
;******* METHOD INDEX 2 - String(byte ascii[], int offset, int count) ********
	.BYTE	$01,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$06	; NAME #6
	.BYTE	$00,$0A	; DESC #10
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,69	; NAME #69
	.BYTE	$00,$00,>(M2A0END-M2A0BGN),<(M2A0END-M2A0BGN)
M2A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$05	; MAX LOCALS 5
	.BYTE	$00,$00,>(M2C0END-M2C0BGN),<(M2C0END-M2C0BGN)
M2C0BGN:
        RTS
M2C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M2A0END:
;******* METHOD INDEX 3 - charAt ********
	.BYTE	$01,$01	; ACCESS FLAGS 0x0101
	.BYTE	$00,$0F	; NAME #15
	.BYTE	$00,$10	; DESC #16
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,69	; NAME #69
	.BYTE	$00,$00,>(M7A0END-M7A0BGN),<(M7A0END-M7A0BGN)
M7A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$02	; MAX LOCALS 2
	.BYTE	$00,$00,>(M7C0END-M7C0BGN),<(M7C0END-M7C0BGN)
M7C0BGN:
	RTS
M7C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M7A0END:
;******* METHOD INDEX 4  - length ********
	.BYTE	$01,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$2A	; NAME #42
	.BYTE	$00,$22	; DESC #34
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,69	; NAME #69
	.BYTE	$00,$00,>(M27A0END-M27A0BGN),<(M27A0END-M27A0BGN)
M27A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$01	; MAX LOCALS 1
	.BYTE	$00,$00,>(M27C0END-M27C0BGN),<(M27C0END-M27C0BGN)
M27C0BGN:
	RTS
M27C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M27A0END:
;******* METHOD INDEX 5 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$06	; NAME #6
	.BYTE	$00,$0B	; DESC #11
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M3A0END-M3A0BGN),<(M3A0END-M3A0BGN)
M3A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$02	; MAX LOCALS 2
	.BYTE	$00,$00,>(M3C0END-M3C0BGN),<(M3C0END-M3C0BGN)
M3C0BGN:
	.BYTE	$2A	; 00000: aload_0
	.BYTE	$B7,$00,$01	; 00001: invokespecial #1
	.BYTE	$B1	; 00004: return
M3C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M3A0END:
;******* METHOD INDEX 6 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$06	; NAME #6
	.BYTE	$00,$0C	; DESC #12
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M4A0END-M4A0BGN),<(M4A0END-M4A0BGN)
M4A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$04	; MAX LOCALS 4
	.BYTE	$00,$00,>(M4C0END-M4C0BGN),<(M4C0END-M4C0BGN)
M4C0BGN:
	.BYTE	$2A	; 00000: aload_0
	.BYTE	$B7,$00,$01	; 00001: invokespecial #1
	.BYTE	$B1	; 00004: return
M4C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M4A0END:
;******* METHOD INDEX 7 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$06	; NAME #6
	.BYTE	$00,$0D	; DESC #13
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M5A0END-M5A0BGN),<(M5A0END-M5A0BGN)
M5A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$02	; MAX LOCALS 2
	.BYTE	$00,$00,>(M5C0END-M5C0BGN),<(M5C0END-M5C0BGN)
M5C0BGN:
	.BYTE	$2A	; 00000: aload_0
	.BYTE	$B7,$00,$01	; 00001: invokespecial #1
	.BYTE	$B1	; 00004: return
M5C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M5A0END:
;******* METHOD INDEX 8 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$06	; NAME #6
	.BYTE	$00,$0E	; DESC #14
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M6A0END-M6A0BGN),<(M6A0END-M6A0BGN)
M6A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$02	; MAX LOCALS 2
	.BYTE	$00,$00,>(M6C0END-M6C0BGN),<(M6C0END-M6C0BGN)
M6C0BGN:
	.BYTE	$2A	; 00000: aload_0
	.BYTE	$B7,$00,$01	; 00001: invokespecial #1
	.BYTE	$B1	; 00004: return
M6C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M6A0END:
;******* METHOD INDEX 9 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$11	; NAME #17
	.BYTE	$00,$12	; DESC #18
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M8A0END-M8A0BGN),<(M8A0END-M8A0BGN)
M8A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$02	; MAX LOCALS 2
	.BYTE	$00,$00,>(M8C0END-M8C0BGN),<(M8C0END-M8C0BGN)
M8C0BGN:
	.BYTE	$03	; 00000: iconst_0
	.BYTE	$AC	; 00001: ireturn
M8C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M8A0END:
;******* METHOD INDEX 10 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$13	; NAME #19
	.BYTE	$00,$14	; DESC #20
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M9A0END-M9A0BGN),<(M9A0END-M9A0BGN)
M9A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$02	; MAX LOCALS 2
	.BYTE	$00,$00,>(M9C0END-M9C0BGN),<(M9C0END-M9C0BGN)
M9C0BGN:
	.BYTE	$01	; 00000: aconst_null
	.BYTE	$B0	; 00001: areturn
M9C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M9A0END:
;******* METHOD INDEX 11 ********
	.BYTE	$00,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$15	; NAME #21
	.BYTE	$00,$16	; DESC #22
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M10A0END-M10A0BGN),<(M10A0END-M10A0BGN)
M10A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$01	; MAX LOCALS 1
	.BYTE	$00,$00,>(M10C0END-M10C0BGN),<(M10C0END-M10C0BGN)
M10C0BGN:
	.BYTE	$01	; 00000: aconst_null
	.BYTE	$B0	; 00001: areturn
M10C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M10A0END:
;******* METHOD INDEX 12 ********
	.BYTE	$00,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$15	; NAME #21
	.BYTE	$00,$17	; DESC #23
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M11A0END-M11A0BGN),<(M11A0END-M11A0BGN)
M11A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$03	; MAX LOCALS 3
	.BYTE	$00,$00,>(M11C0END-M11C0BGN),<(M11C0END-M11C0BGN)
M11C0BGN:
	.BYTE	$01	; 00000: aconst_null
	.BYTE	$B0	; 00001: areturn
M11C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M11A0END:
;******* METHOD INDEX 13 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$18	; NAME #24
	.BYTE	$00,$19	; DESC #25
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M12A0END-M12A0BGN),<(M12A0END-M12A0BGN)
M12A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$02	; MAX LOCALS 2
	.BYTE	$00,$00,>(M12C0END-M12C0BGN),<(M12C0END-M12C0BGN)
M12C0BGN:
	.BYTE	$04	; 00000: iconst_1
	.BYTE	$AC	; 00001: ireturn
M12C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M12A0END:
;******* METHOD INDEX 14 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$1A	; NAME #26
	.BYTE	$00,$1B	; DESC #27
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M13A0END-M13A0BGN),<(M13A0END-M13A0BGN)
M13A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$02	; MAX LOCALS 2
	.BYTE	$00,$00,>(M13C0END-M13C0BGN),<(M13C0END-M13C0BGN)
M13C0BGN:
	.BYTE	$04	; 00000: iconst_1
	.BYTE	$AC	; 00001: ireturn
M13C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M13A0END:
;******* METHOD INDEX 15 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$1C	; NAME #28
	.BYTE	$00,$19	; DESC #25
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M14A0END-M14A0BGN),<(M14A0END-M14A0BGN)
M14A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$02	; MAX LOCALS 2
	.BYTE	$00,$00,>(M14C0END-M14C0BGN),<(M14C0END-M14C0BGN)
M14C0BGN:
	.BYTE	$04	; 00000: iconst_1
	.BYTE	$AC	; 00001: ireturn
M14C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M14A0END:
;******* METHOD INDEX 16 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$1D	; NAME #29
	.BYTE	$00,$1E	; DESC #30
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M15A0END-M15A0BGN),<(M15A0END-M15A0BGN)
M15A0BGN:
;* CODE:
	.BYTE	$00,$00	; MAX STACK 0
	.BYTE	$00,$05	; MAX LOCALS 5
	.BYTE	$00,$00,>(M15C0END-M15C0BGN),<(M15C0END-M15C0BGN)
M15C0BGN:
	.BYTE	$B1	; 00000: return
M15C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M15A0END:
;******* METHOD INDEX 17 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$1F	; NAME #31
	.BYTE	$00,$20	; DESC #32
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M16A0END-M16A0BGN),<(M16A0END-M16A0BGN)
M16A0BGN:
;* CODE:
	.BYTE	$00,$00	; MAX STACK 0
	.BYTE	$00,$05	; MAX LOCALS 5
	.BYTE	$00,$00,>(M16C0END-M16C0BGN),<(M16C0END-M16C0BGN)
M16C0BGN:
	.BYTE	$B1	; 00000: return
M16C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M16A0END:
;******* METHOD INDEX 18 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$21	; NAME #33
	.BYTE	$00,$22	; DESC #34
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M17A0END-M17A0BGN),<(M17A0END-M17A0BGN)
M17A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$01	; MAX LOCALS 1
	.BYTE	$00,$00,>(M17C0END-M17C0BGN),<(M17C0END-M17C0BGN)
M17C0BGN:
	.BYTE	$03	; 00000: iconst_0
	.BYTE	$AC	; 00001: ireturn
M17C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M17A0END:
;******* METHOD INDEX 19 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$23	; NAME #35
	.BYTE	$00,$24	; DESC #36
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M18A0END-M18A0BGN),<(M18A0END-M18A0BGN)
M18A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$02	; MAX LOCALS 2
	.BYTE	$00,$00,>(M18C0END-M18C0BGN),<(M18C0END-M18C0BGN)
M18C0BGN:
	.BYTE	$03	; 00000: iconst_0
	.BYTE	$AC	; 00001: ireturn
M18C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M18A0END:
;******* METHOD INDEX 20 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$23	; NAME #35
	.BYTE	$00,$25	; DESC #37
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M19A0END-M19A0BGN),<(M19A0END-M19A0BGN)
M19A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$03	; MAX LOCALS 3
	.BYTE	$00,$00,>(M19C0END-M19C0BGN),<(M19C0END-M19C0BGN)
M19C0BGN:
	.BYTE	$03	; 00000: iconst_0
	.BYTE	$AC	; 00001: ireturn
M19C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M19A0END:
;******* METHOD INDEX 21 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$23	; NAME #35
	.BYTE	$00,$12	; DESC #18
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M20A0END-M20A0BGN),<(M20A0END-M20A0BGN)
M20A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$02	; MAX LOCALS 2
	.BYTE	$00,$00,>(M20C0END-M20C0BGN),<(M20C0END-M20C0BGN)
M20C0BGN:
	.BYTE	$03	; 00000: iconst_0
	.BYTE	$AC	; 00001: ireturn
M20C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M20A0END:
;******* METHOD INDEX 22 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$23	; NAME #35
	.BYTE	$00,$26	; DESC #38
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M21A0END-M21A0BGN),<(M21A0END-M21A0BGN)
M21A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$03	; MAX LOCALS 3
	.BYTE	$00,$00,>(M21C0END-M21C0BGN),<(M21C0END-M21C0BGN)
M21C0BGN:
	.BYTE	$03	; 00000: iconst_0
	.BYTE	$AC	; 00001: ireturn
M21C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M21A0END:
;******* METHOD INDEX 23 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$27	; NAME #39
	.BYTE	$00,$28	; DESC #40
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M22A0END-M22A0BGN),<(M22A0END-M22A0BGN)
M22A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$01	; MAX LOCALS 1
	.BYTE	$00,$00,>(M22C0END-M22C0BGN),<(M22C0END-M22C0BGN)
M22C0BGN:
	.BYTE	$01	; 00000: aconst_null
	.BYTE	$B0	; 00001: areturn
M22C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M22A0END:
;******* METHOD INDEX 24 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$29	; NAME #41
	.BYTE	$00,$24	; DESC #36
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M23A0END-M23A0BGN),<(M23A0END-M23A0BGN)
M23A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$02	; MAX LOCALS 2
	.BYTE	$00,$00,>(M23C0END-M23C0BGN),<(M23C0END-M23C0BGN)
M23C0BGN:
	.BYTE	$03	; 00000: iconst_0
	.BYTE	$AC	; 00001: ireturn
M23C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M23A0END:
;******* METHOD INDEX 25 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$29	; NAME #41
	.BYTE	$00,$25	; DESC #37
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M24A0END-M24A0BGN),<(M24A0END-M24A0BGN)
M24A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$03	; MAX LOCALS 3
	.BYTE	$00,$00,>(M24C0END-M24C0BGN),<(M24C0END-M24C0BGN)
M24C0BGN:
	.BYTE	$03	; 00000: iconst_0
	.BYTE	$AC	; 00001: ireturn
M24C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M24A0END:
;******* METHOD INDEX 26 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$29	; NAME #41
	.BYTE	$00,$12	; DESC #18
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M25A0END-M25A0BGN),<(M25A0END-M25A0BGN)
M25A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$02	; MAX LOCALS 2
	.BYTE	$00,$00,>(M25C0END-M25C0BGN),<(M25C0END-M25C0BGN)
M25C0BGN:
	.BYTE	$03	; 00000: iconst_0
	.BYTE	$AC	; 00001: ireturn
M25C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M25A0END:
;******* METHOD INDEX 27 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$29	; NAME #41
	.BYTE	$00,$26	; DESC #38
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M26A0END-M26A0BGN),<(M26A0END-M26A0BGN)
M26A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$03	; MAX LOCALS 3
	.BYTE	$00,$00,>(M26C0END-M26C0BGN),<(M26C0END-M26C0BGN)
M26C0BGN:
	.BYTE	$03	; 00000: iconst_0
	.BYTE	$AC	; 00001: ireturn
M26C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M26A0END:
;******* METHOD INDEX 28 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$2B	; NAME #43
	.BYTE	$00,$2C	; DESC #44
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M28A0END-M28A0BGN),<(M28A0END-M28A0BGN)
M28A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$06	; MAX LOCALS 6
	.BYTE	$00,$00,>(M28C0END-M28C0BGN),<(M28C0END-M28C0BGN)
M28C0BGN:
	.BYTE	$04	; 00000: iconst_1
	.BYTE	$AC	; 00001: ireturn
M28C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M28A0END:
;******* METHOD INDEX 29 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$2B	; NAME #43
	.BYTE	$00,$2D	; DESC #45
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M29A0END-M29A0BGN),<(M29A0END-M29A0BGN)
M29A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$05	; MAX LOCALS 5
	.BYTE	$00,$00,>(M29C0END-M29C0BGN),<(M29C0END-M29C0BGN)
M29C0BGN:
	.BYTE	$04	; 00000: iconst_1
	.BYTE	$AC	; 00001: ireturn
M29C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M29A0END:
;******* METHOD INDEX 30 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$2E	; NAME #46
	.BYTE	$00,$2F	; DESC #47
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M30A0END-M30A0BGN),<(M30A0END-M30A0BGN)
M30A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$03	; MAX LOCALS 3
	.BYTE	$00,$00,>(M30C0END-M30C0BGN),<(M30C0END-M30C0BGN)
M30C0BGN:
	.BYTE	$01	; 00000: aconst_null
	.BYTE	$B0	; 00001: areturn
M30C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M30A0END:
;******* METHOD INDEX 31 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$30	; NAME #48
	.BYTE	$00,$19	; DESC #25
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M31A0END-M31A0BGN),<(M31A0END-M31A0BGN)
M31A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$02	; MAX LOCALS 2
	.BYTE	$00,$00,>(M31C0END-M31C0BGN),<(M31C0END-M31C0BGN)
M31C0BGN:
	.BYTE	$04	; 00000: iconst_1
	.BYTE	$AC	; 00001: ireturn
M31C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M31A0END:
;******* METHOD INDEX 32 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$31	; NAME #49
	.BYTE	$00,$32	; DESC #50
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M32A0END-M32A0BGN),<(M32A0END-M32A0BGN)
M32A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$03	; MAX LOCALS 3
	.BYTE	$00,$00,>(M32C0END-M32C0BGN),<(M32C0END-M32C0BGN)
M32C0BGN:
	.BYTE	$04	; 00000: iconst_1
	.BYTE	$AC	; 00001: ireturn
M32C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M32A0END:
;******* METHOD INDEX 33 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$33	; NAME #51
	.BYTE	$00,$34	; DESC #52
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M33A0END-M33A0BGN),<(M33A0END-M33A0BGN)
M33A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$02	; MAX LOCALS 2
	.BYTE	$00,$00,>(M33C0END-M33C0BGN),<(M33C0END-M33C0BGN)
M33C0BGN:
	.BYTE	$01	; 00000: aconst_null
	.BYTE	$B0	; 00001: areturn
M33C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M33A0END:
;******* METHOD INDEX 34 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$33	; NAME #51
	.BYTE	$00,$35	; DESC #53
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M34A0END-M34A0BGN),<(M34A0END-M34A0BGN)
M34A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$03	; MAX LOCALS 3
	.BYTE	$00,$00,>(M34C0END-M34C0BGN),<(M34C0END-M34C0BGN)
M34C0BGN:
	.BYTE	$01	; 00000: aconst_null
	.BYTE	$B0	; 00001: areturn
M34C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M34A0END:
;******* METHOD INDEX 35 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$36	; NAME #54
	.BYTE	$00,$37	; DESC #55
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M35A0END-M35A0BGN),<(M35A0END-M35A0BGN)
M35A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$01	; MAX LOCALS 1
	.BYTE	$00,$00,>(M35C0END-M35C0BGN),<(M35C0END-M35C0BGN)
M35C0BGN:
	.BYTE	$01	; 00000: aconst_null
	.BYTE	$B0	; 00001: areturn
M35C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M35A0END:
;******* METHOD INDEX 36 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$38	; NAME #56
	.BYTE	$00,$28	; DESC #40
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M36A0END-M36A0BGN),<(M36A0END-M36A0BGN)
M36A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$01	; MAX LOCALS 1
	.BYTE	$00,$00,>(M36C0END-M36C0BGN),<(M36C0END-M36C0BGN)
M36C0BGN:
	.BYTE	$01	; 00000: aconst_null
	.BYTE	$B0	; 00001: areturn
M36C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M36A0END:
;******* METHOD INDEX 37 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$39	; NAME #57
	.BYTE	$00,$28	; DESC #40
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M37A0END-M37A0BGN),<(M37A0END-M37A0BGN)
M37A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$01	; MAX LOCALS 1
	.BYTE	$00,$00,>(M37C0END-M37C0BGN),<(M37C0END-M37C0BGN)
M37C0BGN:
	.BYTE	$01	; 00000: aconst_null
	.BYTE	$B0	; 00001: areturn
M37C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M37A0END:
;******* METHOD INDEX 38 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$3A	; NAME #58
	.BYTE	$00,$28	; DESC #40
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M38A0END-M38A0BGN),<(M38A0END-M38A0BGN)
M38A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$01	; MAX LOCALS 1
	.BYTE	$00,$00,>(M38C0END-M38C0BGN),<(M38C0END-M38C0BGN)
M38C0BGN:
	.BYTE	$01	; 00000: aconst_null
	.BYTE	$B0	; 00001: areturn
M38C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M38A0END:
;******* METHOD INDEX 39 ********
	.BYTE	$00,$01	; ACCESS FLAGS 0x0001
	.BYTE	$00,$3B	; NAME #59
	.BYTE	$00,$28	; DESC #40
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M39A0END-M39A0BGN),<(M39A0END-M39A0BGN)
M39A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$01	; MAX LOCALS 1
	.BYTE	$00,$00,>(M39C0END-M39C0BGN),<(M39C0END-M39C0BGN)
M39C0BGN:
	.BYTE	$01	; 00000: aconst_null
	.BYTE	$B0	; 00001: areturn
M39C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M39A0END:
;******* METHOD INDEX 40 ********
	.BYTE	$00,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$3C	; NAME #60
	.BYTE	$00,$3D	; DESC #61
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M40A0END-M40A0BGN),<(M40A0END-M40A0BGN)
M40A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$01	; MAX LOCALS 1
	.BYTE	$00,$00,>(M40C0END-M40C0BGN),<(M40C0END-M40C0BGN)
M40C0BGN:
	.BYTE	$01	; 00000: aconst_null
	.BYTE	$B0	; 00001: areturn
M40C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M40A0END:
;******* METHOD INDEX 41 ********
	.BYTE	$00,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$3C	; NAME #60
	.BYTE	$00,$3E	; DESC #62
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M41A0END-M41A0BGN),<(M41A0END-M41A0BGN)
M41A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$01	; MAX LOCALS 1
	.BYTE	$00,$00,>(M41C0END-M41C0BGN),<(M41C0END-M41C0BGN)
M41C0BGN:
	.BYTE	$01	; 00000: aconst_null
	.BYTE	$B0	; 00001: areturn
M41C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M41A0END:
;******* METHOD INDEX 42 ********
	.BYTE	$00,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$3C	; NAME #60
	.BYTE	$00,$16	; DESC #22
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M42A0END-M42A0BGN),<(M42A0END-M42A0BGN)
M42A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$01	; MAX LOCALS 1
	.BYTE	$00,$00,>(M42C0END-M42C0BGN),<(M42C0END-M42C0BGN)
M42C0BGN:
	.BYTE	$01	; 00000: aconst_null
	.BYTE	$B0	; 00001: areturn
M42C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M42A0END:
;******* METHOD INDEX 43 ********
	.BYTE	$00,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$3C	; NAME #60
	.BYTE	$00,$17	; DESC #23
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M43A0END-M43A0BGN),<(M43A0END-M43A0BGN)
M43A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$03	; MAX LOCALS 3
	.BYTE	$00,$00,>(M43C0END-M43C0BGN),<(M43C0END-M43C0BGN)
M43C0BGN:
	.BYTE	$01	; 00000: aconst_null
	.BYTE	$B0	; 00001: areturn
M43C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M43A0END:
;******* METHOD INDEX 44 ********
	.BYTE	$00,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$3C	; NAME #60
	.BYTE	$00,$3F	; DESC #63
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M44A0END-M44A0BGN),<(M44A0END-M44A0BGN)
M44A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$01	; MAX LOCALS 1
	.BYTE	$00,$00,>(M44C0END-M44C0BGN),<(M44C0END-M44C0BGN)
M44C0BGN:
	.BYTE	$01	; 00000: aconst_null
	.BYTE	$B0	; 00001: areturn
M44C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M44A0END:
;******* METHOD INDEX 45 ********
	.BYTE	$00,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$3C	; NAME #60
	.BYTE	$00,$34	; DESC #52
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M45A0END-M45A0BGN),<(M45A0END-M45A0BGN)
M45A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$01	; MAX LOCALS 1
	.BYTE	$00,$00,>(M45C0END-M45C0BGN),<(M45C0END-M45C0BGN)
M45C0BGN:
	.BYTE	$01	; 00000: aconst_null
	.BYTE	$B0	; 00001: areturn
M45C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M45A0END:
;******* METHOD INDEX 46 ********
	.BYTE	$00,$09	; ACCESS FLAGS 0x0009
	.BYTE	$00,$3C	; NAME #60
	.BYTE	$00,$40	; DESC #64
	.BYTE	$00,$01	; ATTRIB COUNT 1
;* ATTRIB INDEX 0
	.BYTE	$00,$08	; NAME #8
	.BYTE	$00,$00,>(M46A0END-M46A0BGN),<(M46A0END-M46A0BGN)
M46A0BGN:
;* CODE:
	.BYTE	$00,$01	; MAX STACK 1
	.BYTE	$00,$01	; MAX LOCALS 1
	.BYTE	$00,$00,>(M46C0END-M46C0BGN),<(M46C0END-M46C0BGN)
M46C0BGN:
	.BYTE	$01	; 00000: aconst_null
	.BYTE	$B0	; 00001: areturn
M46C0END:
;* EXCEPTION TABLE
	.BYTE	$00,$00	; COUNT 0
;* CODE ATTRIB
	.BYTE	$00,$00	; ATTRIB COUNT 0
M46A0END:
;*
;* GLOBAL ATTRIBUTES
;*
	.BYTE	$00,$00	; ATTRIB COUNT 0
